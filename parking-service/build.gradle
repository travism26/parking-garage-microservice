plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'io.quarkus:quarkus-container-image-jib'
    compileOnly 'org.projectlombok:lombok:1.18.28'
    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-rest-client-reactive-jackson'
    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy-reactive'

    // Database, Entity, and Mapper
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache:3.2.2.Final'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    implementation 'io.quarkus:quarkus-flyway:3.2.2.Final'

    // Testing stuff
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'io.quarkus:quarkus-jacoco:3.2.2.Final'
    testImplementation 'io.quarkus:quarkus-junit5-mockito:3.2.2.Final'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.testcontainers:testcontainers:1.18.3'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'
}

group 'org.mtravis.microservices'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

// Adding my docker creds from my local gradle.properties file this is to deploy my image to my
// personal docker repo.
if (!hasProperty('quarkus.container-image.username')) {
    ext['quarkus.container-image.username'] = docker_user
}

if (!hasProperty('quarkus.container-image.password')) {
    ext['quarkus.container-image.password'] = docker_token
}